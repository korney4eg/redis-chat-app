---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-app
  labels:
    app: chat-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-app
  template:
    metadata:
      labels:
        app: chat-app
    spec:
      containers:
        - name: chat-app
          image: chat-app:latest
          imagePullPolicy: Never
          env:
            - name: REDIS_SERVICE_NAME
              value: redis
            - name: REDIS_PASSWORD
              value: my_password
            - name: REDIS_DISABLE_COMMANDS
              value: FLUSHDB,FLUSHALL
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: chat-app
spec:
  selector:
    app: chat-app
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: docker.io/bitnami/redis:6.2

          env:
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: REDIS_PASSWORD
              value: my_password
            - name: REDIS_DISABLE_COMMANDS
              value: FLUSHDB,FLUSHALL
          ports:
            - containerPort: 6379
          # volumeMounts:
          #   - name: data
          #     mountPath: "/data/"
      # volumes:
        # - name: data
          # accessModes:
          #   - ReadWriteOnce
          # capacity:
          #   storage: 5Gi
          # hostPath:
          #   path: /data/redis-data/
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
